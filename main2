import pymysql
#import pymysql.cursor

import sys
from _collections_abc import Set
from time import *
# DB connect information
host = 'localhost'
user = 'root'
passwd = ''
db = 'praktikum'

# config
wordIdBoundary = 10000
minCountOfWords = 5

# create db connection
db = pymysql.connect(host = host,
                    user = user,
                    passwd = passwd,
                    db = db)

def createWordVector(col):
    from collections import defaultdict
    result = defaultdict(set)
    for row in col:
        result[row[0]].add(row[1])
    return result

def createSentenceVector(wordVectors):
    from collections import defaultdict
    result = defaultdict(set)
    for sentenceId in wordVectors.keys():
        for wordId in wordVectors[sentenceId]:
            result[wordId].add(sentenceId)
    #remove all sentence vectors with less than 2 entries
    #for wordId in result.keys():
        #if len(result[wordId]) == 1:
            #result.pop(wordId)
    return result
	
def createSentencePair(sentenceVectors):
	pair = []
	for sentences in sentenceVectors.values():
		if(len(sentences)>1):
			#print(sentences)
			dummySet = sentences.copy()
			
			while(1 < len(dummySet)):
				sentence1 = dummySet.pop()
				for sentence2 in dummySet:
					pair.append(str(sentence1) + ':' + str(sentence2))
		
	pair.sort()
	
	return pair

def countSentences(sentencePair):
	result = []
	minCommonWords = 5
	countCommonWords = 0
	i = 0
	currentPair = sentencePair[i]
	i = i + 1
	while(i<len(sentencePair)):
		if(currentPair == sentencePair[i]):
			countCommonWords = countCommonWords + 1
		else:
			if(countCommonWords > minCommonWords):
				result.append(currentPair)
			currentPair = sentencePair[i]
			countCommonWords = 0
		i = i + 1
	
	return result
	
t1 = clock()
query = "select i1.s_id, i1.w_id from inv_w as i1 join (select s_id from inv_w where w_id >= " + str(wordIdBoundary) + " group by s_id having count(*) >= " + str(minCountOfWords) + " ) as i2 on i1.s_id = i2.s_id where i1.w_id >= " + str(wordIdBoundary) + " order by i1.s_id "
c1 = db.cursor()
c1.execute(query)
wordVectors = createWordVector(c1.fetchall())
print("Cound WordVectors: "+ str(len(wordVectors)))
sentenceVectors = createSentenceVector(wordVectors)
print("Cound sentenceVectors: "+ str(len(sentenceVectors)))
sentencePair = createSentencePair(sentenceVectors)
print("Cound sentencePair: "+ str(len(sentencePair)))
similarSentences = countSentences(sentencePair)
print("Cound similarSentences: "+ str(len(similarSentences)))
#print(similarSentences[5])
c1.close()
t2 = clock()
print(str(t2 - t1))
